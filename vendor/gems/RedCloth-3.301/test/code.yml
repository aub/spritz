---
name: inline code
in: 'This is an empty dictionary: @{}@'
html: '<p>This is an empty dictionary: <code>{}</code></p>'
---
name: inline code escapement
in: 'Please type @cat "file.txt" > otherfile.txt@ at the prompt.'
html: '<p>Please type <code>cat "file.txt" &gt; otherfile.txt</code> at the prompt.</p>'
---
name: inline code escapement with digits
in: |-
  Regex-based string substitution with Ruby's gsub!: @"123<789".gsub!(/</, "") => "123789"@
html: |-
  <p>Regex-based string substitution with Ruby&#8217;s gsub!: <code>"123&lt;789".gsub!(/&lt;/, "") =&gt; "123789"</code></p>
---
name: inlne code escapement describing textile paragraph styling 
in: 'This paragraph is aligned left but if you add this: @p>.@ to the beginning it will be aligned right.'
html: '<p>This paragraph is aligned left but if you add this: <code>p&gt;.</code> to the beginning it will be aligned right.</p>'
---
name: escaping in blockcode
in: 'bc. This is within a block of code, so < and > should be entities.  You can talk about a <p class="foo"> tag if you wish and it will be properly escaped.'
html: '<pre><code>This is within a block of code, so &lt; and &gt; should be entities.  You can talk about a &lt;p class="foo"&gt; tag if you wish and it will be properly escaped.</code></pre>'
---
name: escaping in pre
in: '<pre><code>This is within a block of code, so < and > should be entities.  You can talk about a <p class="foo"> tag in pre tags too.</code></pre>'
html: '<pre><code>This is within a block of code, so &lt; and &gt; should be entities.  You can talk about a &lt;p class="foo"&gt; tag in pre tags too.</code></pre>'
---
name: escaping in normal text
in: |-
  This is a regular paragraph.  AT&T. &pound;38 > $38.
html: |-
  <p>This is a regular paragraph.  AT&amp;T. &pound;38 &gt; $38.</p>
---
name: preservation of existing entities
in: "Math fact: 3 &lt; 5 &amp; 5 &gt; 3 but &pound;6 &#62; $6.
"
html: "<p>Math fact: 3 &lt; 5 &amp; 5 &gt; 3 but &pound;6 &#62; $6.</p>"
---
name: escaping of existing entities in blockcode
in: "bc. Math fact: 3 &lt; 5 &amp; 5 &gt; 3 but &pound;5 &#62; $5.
"
html: "<pre><code>Math fact: 3 &amp;lt; 5 &amp;amp; 5 &amp;gt; 3 but &amp;pound;5 &amp;#62; $5.</code></pre>"
---
name: no formatting within pre
in: |-
  <pre>
  <code>
  # *test*
  __not italics__
  no hard breaks
  </code>
  </pre>
html: |-
  <pre>
  <code>
  # *test*
  __not italics__
  no hard breaks
  </code>
  </pre>
---
name: no formatting within blockcode
in: |-
  bc. __not italics__
html: |-
  <pre><code>__not italics__</code></pre>
---
name: double-equals as inline notextile
in: |-
  p. Regular paragraph

  ==Escaped portion -- will not be formatted by Textile at all==

  p. Back to normal.
html: |-
  <p>Regular paragraph</p>
  <p>Escaped portion -- will not be formatted by Textile at all</p>
  <p>Back to normal.</p>
---
name: notextile tags
in: |-
  <notextile>
  # *test*
  </notextile>
html: |-
  
  # *test*
---
name: code in list items
in: |-
  * @foo@
  * @bar@
  * and @x@ is also.

html: |-
  <ul>
  	<li><code>foo</code></li>
  	<li><code>bar</code></li>
  	<li>and <code>x</code> is also.</li>
  </ul>
---
name: extended block code
in: |-
  If you have a line or two of code or HTML to embed, use extended block code like so:

  bc.. ./foo.pl%
  <p>foo outputs an HTML paragraph</p>
  
  <p>block of code keeps going until a different block signature is encountered</p>

  p. And then go back with a normal paragraph.
html: |-
  <p>If you have a line or two of code or <span class="caps">HTML</span> to embed, use extended block code like so:</p>
  <pre><code>./foo.pl%
  &lt;p&gt;foo outputs an HTML paragraph&lt;/p&gt;</code>

  <code>&lt;p&gt;block of code keeps going until a different block signature is encountered&lt;/p&gt;</code>

  </pre>
  <p>And then go back with a normal paragraph.</p>
---
name: block code containing block start
in: |-
  bc. I saw a ship. It ate my elephant.
html: |-
  <pre><code>I saw a ship. It ate my elephant.</code></pre>
---
name: extended block code containing block start
in: |-
  bc.. This is an extended bc.
  
  I saw a ship. It ate my elephant.
html: |-
  <pre><code>This is an extended bc.</code>
  
  <code>I saw a ship. It ate my elephant.</code></pre>